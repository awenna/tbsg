UI code is all over the place. 
	- Code generate graphics png's
		- Tie png's to other unit data
	- Utilize form functionality more
	- Use matrixes?

Bugs:
    - Crashes on click on bot left of empty hex in top row

Misc:
	- UseDefaultAction needs to attack if location has an enemy
		- Wrap target to a class?
		- Figure specifics somewhere
			- AI class?
	- Goals. Goals break into actions of an individual turn.
	- Action is probably a better description that Command?

Window & settings:
    - Stretchable, don't save resolution to settings

Turns:
	- Data structures for turns
	- Show current turn in UI
	- Main controller

	- Turn:
		[] Action
	- GameState + Turn = GameState
		- Turn processing
    - GameState stack
    - GUI has a mutable GameState that is discarded
    - Compile turn -> actual game state stack
    
    - Every command goes through GameController
        - GameController creates Commands and passes on 
            -> resolution or not -> stack
    - GameController has full info -> GUI requests and modifies etc
	
Camera:
    Rename CameraController to Camera
    Put Camera's variables into CamCont
    Remove old Camera
    
    No point to separate data and function just for the sake of it?

Future features:
-Replays
-Json loading
-Builder app
-Code generate images to use as graphics
-Dedicated (REST?) game server
